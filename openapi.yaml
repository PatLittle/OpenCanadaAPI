---
openapi: 3.0.0
servers:
- url: https://open.canada.ca/data/api
  description: Portal with federated data published to the general public
- url: https://registry.open.canada.ca/api
  description: Registry for collecting and publishing data to the portal
- url: https://staging.open.canada.ca/data/api
  description: Staging Portal for sharing upcoming features
- url: https://registry-staging.open.canada.ca/api
  description: Staging Registry for sharing upcoming features and accounts for testing integration
- url: https://test.open.canada.ca/data/api
  description: Test Portal for features under development
- url: https://registry-test.open.canada.ca/api
  description: Test Registry for features under development

info:
  title: Open Government CKAN API
  description: >
    This API provides live access to the CKAN portion of the Open Government Portal. Further
    documentation on the API is available from http://docs.ckan.org/en/2.8/
  termsOfService: https://open.canada.ca/en/open-government-licence-canada
  contact:
    name:
      en: TBS Open Government
      fr: Gouvernement ouvert SCT
    url:
      en: https://open.canada.ca/
      fr: https://ouvert.canada.ca/
    email: open-ouvert@tbs-sct.gc.ca
  license:
    name: Open Government License - Canada
    url: https://open.canada.ca/en/open-government-licence-canada
  version: 3.0.1
tags:
- name: action
  description: CKAN's Action API is a powerful, RPC-style API that exposes all of
    CKAN's core features to API clients.
  externalDocs:
    description: Find out more
    url: https://docs.ckan.org/en/2.8/api/index.html
security:
- {}
- internal_api_key: []
paths:
  "/action/status_show":
    get:
      summary: Get the site status
      description: Returns the site status
      tags:
      - action
      responses:
        '200':
          description: Returns the CKAN version and a list of installed extensions
  "/action/package_list":
    get:
      summary: Get a list of all packages (datasets)
      description: Returns the names of all indexed packages (datasets)
      parameters:
      - name: offset
        in: query
        description: The offset (index) of the first package to return
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of packages to be returned per page
        schema:
          type: integer
          default: 100
      tags:
      - action
      responses:
        '200':
          description: List of packages
  "/action/package_search":
    get:
      summary: Find packages (datasets) matching query terms
      description: Searches for packages (datasets) matching the specified query terms
      parameters:
      - name: q
        in: query
        description: A query string
        schema:
          type: string
          default: '"Fuel Consumption Ratings"'
      tags:
      - action
      responses:
        '200':
          description: List of packages
  "/action/package_show":
    get:
      summary: Get metadata about one specific package (dataset)
      description: Returns metadata about the package (dataset) corresponding to the
        specified unique name
      parameters:
      - name: id
        in: query
        description: The package name
        schema:
          type: string
          default: 2916fad5-ebcc-4c86-b0f3-4f619b29f412
      tags:
      - action
      responses:
        '200':
          description: A package metadata object
  "/action/package_activity_list":
    get:
      summary: Get the activity stream of a package (dataset)
      description: Returns a package's activity stream
      parameters:
      - name: id
        in: query
        description: The id or name of the package
        schema:
          type: string
          default: 2916fad5-ebcc-4c86-b0f3-4f619b29f412
      - name: offset
        in: query
        description: Where to start getting activity items from
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: The maximum number of activities to return
        schema:
          type: integer
          default: 31
      tags:
      - action
      responses:
        '200':
          description: List of activities
  "/action/organization_activity_list":
    get:
      summary: Get the activity stream of an organization
      description: Return an organization's activity stream
      parameters:
      - name: id
        in: query
        description: The id or name of the organization
        schema:
          type: string
          default: ec
      tags:
      - action
      responses:
        '200':
          description: List of an organization's activities
  "/action/organization_list_for_user":
    get:
      summary: Get organizations that a user has a given permission for
      description: Return the organizations that the user has a given permission for
      parameters:
      - name: permission
        in: query
        description: The permission the user has against the returned organization
        schema:
          type: string
          default: '"edit_group"'
      tags:
      - action
      responses:
        '200':
          description: List of organizations for given permission
  "/action/organization_show":
    get:
      summary: Get details of a specific organization
      description: Return the details of an organization
      parameters:
      - name: id
        in: query
        description: The id or name of the organization
        schema:
          type: string
          default: tbs-sct
      - name: include_datasets
        in: query
        description: include a list of the organization's datasets
        schema:
          type: boolean
          default: true
      tags:
      - action
      responses:
        '200':
          description: List organization details
  "/action/organization_list":
    get:
      summary: Get names of all organizations
      description: Returns the names of all indexed organizations
      parameters:
      - name: offset
        in: query
        description: The offset (index) of the first organizations to return
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of organizations to be returned per page
        schema:
          type: integer
          default: 100
      tags:
      - action
      responses:
        '200':
          description: List of organizations
  "/action/resource_search":
    get:
      summary: Find resources
      description: Returns a dictionary with two fields ``count`` and ``results``.             The
        ``count`` field contains the total number of Resources                found
        without the limit or query parameters having an effect.             The ``results``
        field is a list of dictized Resource objects.             The query parameter
        is a required field. It is a string in                the form ``{field}:{term}``
        or a list of strings, each of the             same form. Within each string,
        ``{field}`` is a field or extra             field on the Resource domain object.
      parameters:
      - name: query
        in: query
        description: The search criteria string or list of strings of the form ``{field}:{term1}``
        schema:
          type: string
          default: format:csv
      - name: fields
        in: query
        description: Depreciated
        schema:
          type: string
      - name: order_by
        in: query
        description: A field on the resource model that orders the results
        schema:
          type: string
      - name: offset
        in: query
        description: Apply an offset to the query
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: Apply a limit to the query
        schema:
          type: integer
          default: 0
      tags:
      - action
      responses:
        '200':
          description: Search for resources
  "/action/resource_show":
    get:
      summary: Get metadata for a specific resource
      description: Return the metadata of a resource
      parameters:
      - name: id
        in: query
        description: The id of the resource
        schema:
          type: string
          default: e6c8bb1d-3726-418b-9b7e-1d97a9bbb817
      - name: include_tracking
        in: query
        description: Add tracking information to dataset
        schema:
          type: boolean
          default: false
      tags:
      - action
      responses:
        '200':
          description: Return metadata of a resource
components:
  schemas: {}
  securitySchemes:
    internal_api_key:
      type: apiKey
      in: header
      name: Authorization

